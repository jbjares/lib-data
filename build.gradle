import org.jetbrains.dokka.gradle.DokkaTask

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.11"
    id "com.diffplug.gradle.spotless" version "3.16.0"
    id "org.jetbrains.dokka" version "0.9.17"
}

group 'de.difuture.ekut.pht.lib'
version '0.1.2'

repositories {
    jcenter()

    maven {
        url  "https://dl.bintray.com/lukaszimmermann/lukaszimmermann"
    }
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.11'
    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    // Jackson
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.7'

    // Kotlin extensions
    implementation group: 'kotlinext', name: 'string', version: '3.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}

apply plugin: 'maven-publish'
apply plugin: 'jacoco'

/*
 * Publish as Maven Artifact
 */
/*
 * Publish as Maven Artifact
 */
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

model {
    tasks.generatePomFileForMavenPublication {
        destination = file("$buildDir/libs/data-0.1.2.pom")
    }
}

/*
 * Enable source and javadoc for Maven publish
 */
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

spotless {
    kotlin {
        ktlint()
    }
}


jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
check.dependsOn jacocoTestReport
